package ficheros;

import java.io.File;

import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;

import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

public class ManejoFicherosBloque3V2 {

	public static void main(String[] args) {

		try {
			String ruta = "libros.xml"; // Ruta del archivo XML

			// Cargar el documento XML
			File inputFile = new File(ruta);
			DocumentBuilderFactory dbFactory = DocumentBuilderFactory.newInstance();
			DocumentBuilder dBuilder = dbFactory.newDocumentBuilder();
			Document doc = dBuilder.parse(inputFile); // Carga y analiza el archivo XML
			doc.getDocumentElement().normalize(); // Normaliza el formato del documento

			// Llamada a los métodos para realizar diferentes operaciones sobre el XML
			mostrarIDs(doc);
			mostrarAutoresYTitulos(doc);
			// mostrarTitulosYPrecios(doc);
			// mostrarLibrosPorGenero(doc);
			// traducirYGuardarXML(doc, "libros_traducidos.xml");

		} catch (Exception e) {
			e.printStackTrace(); // Captura y muestra cualquier excepción que ocurra
		}

	}

//--------------------------------------------------------------------------------------------------
	// metodo para mostrar IDs de
	private static void mostrarIDs(Document doc) {

		System.out.println("=== IDs de los libros ===");
		NodeList bookList = doc.getElementsByTagName("Book");
		for (int i = 0; i < bookList.getLength(); i++) {
			Element book = (Element) bookList.item(i);
			String id = book.getAttribute("id");
			System.out.println("ID del libro: " + id);
		}
	}

	// metodo mostrar Autores y Titulo de cada libro
	private static void mostrarAutoresYTitulos(Document doc) {
	    System.out.println("\n=== Autores y títulos de los libros ===");
	    NodeList bookList = doc.getElementsByTagName("Book");
	    for (int i = 0; i < bookList.getLength(); i++) {
	        Element book = (Element) bookList.item(i);
	        String author = book.getElementsByTagName("Author").item(0).getTextContent(); 
	        String title = book.getElementsByTagName("Title").item(0).getTextContent(); 
	        System.out.println("Autor: " + author + " | Título: " + title);
	    }
	}
	
	//mostrar Titulos y Precios
	private static void mostrarTitulosYPrecios(Document doc) {
		
		System.out.println("\n=== Títulos y precios ordenados ===");
		NodeList bookList = doc.getElementsByTagName("Book");
		
		
		
		
		
	}
	
	
}