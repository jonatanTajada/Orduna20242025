package ficheros;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;

public class ManejoFicherosBloque2 {

    public static void main(String[] args) {

        Persona persona = new Persona("Jonatan", 36, "123456798A");
        guardarPersona(persona, "personas.txt");
        
        Persona persona2 = new Persona("Andrew", 16, "123336798B");
        guardarPersona(persona2, "personas.txt");
        
        Persona persona3 = new Persona("Janire", 36, "123458798C");
        guardarPersona(persona3, "personas.txt");

        Persona personaRecuperada = recuperarPersona("personas.txt");

        // 1.c. Modificar la persona y guardarla de nuevo
        if (personaRecuperada != null) {
            personaRecuperada.setEdad(37);
            guardarPersona(personaRecuperada, "personas.txt");
            System.err.println(personaRecuperada);
        }

        // 2.a. Crear un fichero de texto utilizando FileWriter
        String contenidoTexto = "Esto es un texto de prueba, Estamos creando nuestro primer fichero de texto https://codigonline.com";
        crearFicheroTexto("listaPersonas.txt", contenidoTexto);

        // 3. Leer un fichero de tipo imagen y mostrar su contenido binario
       // leerImagen("java.jpg");
    }

    // Método para guardar objeto Persona en fichero
    public static void guardarPersona(Persona persona, String ruta) {
        try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(ruta))) {
            oos.writeObject(persona);
            System.out.println("Persona guardada con exito en " + ruta);
            System.out.println("-Datos de "+ persona.getNombre() + " guardada con exito:\n" + persona.toString());
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Método para recuperar un objeto Persona de un fichero
    public static Persona recuperarPersona(String ruta, String nombre) {
        Persona persona = null;
        try (ObjectInputStream ois = new ObjectInputStream(new FileInputStream(ruta))) {
            persona = (Persona) ois.readObject().equals(ois);
            System.out.println("Persona recuperada correctamente de " + ruta);
            System.out.println("-Datos de persona recuperada guardada con exito:\n" + persona.toString());
        } catch (IOException | ClassNotFoundException e) {
            e.printStackTrace();
        }
        return persona;
    }

    // Método para leer y mostrar el contenido de un fichero de tipo imagen
    public static void leerImagen(String ruta) {
        try (FileInputStream fis = new FileInputStream(new File(ruta))) {
            System.out.println("Contenido binario del fichero de imagen:");
            int byteData;
            // Cambiado de != 1 a != -1
            while ((byteData = fis.read()) != -1) {
                System.out.print(byteData + " ");
            }
            System.out.println("\nLectura de la imagen completada.");
        } catch (IOException e) {
            e.printStackTrace();
        }
    }

    // Método para crear un fichero de texto utilizando FileWriter
    public static void crearFicheroTexto(String ruta, String contenido) {
        try (FileWriter fw = new FileWriter(ruta)) {
            fw.write(contenido);
            System.out.println("Fichero de texto creado correctamente en " + ruta);
        } catch (IOException e) {
            e.printStackTrace();
        }
    }
}
