package primerosEjercicios.tarea1;

public class VentanaLoginGUI extends JFrame {

    private static final long serialVersionUID = 1L;
    private JTextField txtNombreUsuario;
    private JPasswordField txtPassword;
    private JPasswordField txtPasswordVerificar;
    private JLabel lblMensaje;

    /**
     * Launch the application.
     */
    public static void main(String[] args) {
        EventQueue.invokeLater(new Runnable() {
            public void run() {
                try {
                    VentanaLoginGUI frame = new VentanaLoginGUI();
                    frame.setVisible(true);
                } catch (Exception e) {
                    e.printStackTrace();
                }
            }
        });
    }

    /**
     * Create the frame.
     */
    public VentanaLoginGUI() {
        
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setBounds(100, 100, 450, 300);
        getContentPane().setLayout(new BorderLayout(0, 0));
        
        JPanel panelCenter = new JPanel();
        getContentPane().add(panelCenter, BorderLayout.CENTER);
        panelCenter.setLayout(new BoxLayout(panelCenter, BoxLayout.Y_AXIS));
        
        // Crear un sub-panel para los elementos de formulario para mantener el alineamiento a la izquierda
        JPanel panelFormulario = new JPanel();
        panelFormulario.setLayout(new FlowLayout(FlowLayout.LEFT)); // Alinear a la izquierda
        panelCenter.add(panelFormulario);
        
        JLabel lblUsuario = new JLabel("Nombre usuario: ");
        panelFormulario.add(lblUsuario);
        
        txtNombreUsuario = new JTextField();
        txtNombreUsuario.setPreferredSize(new Dimension(200, 25));
        panelFormulario.add(txtNombreUsuario);
        txtNombreUsuario.setColumns(15);
        
        JLabel lblPassword = new JLabel("Contraseña:");
        panelFormulario.add(lblPassword);
        
        txtPassword = new JPasswordField();
        txtPassword.setPreferredSize(new Dimension(200, 25));
        panelFormulario.add(txtPassword);
        txtPassword.setColumns(15);
        
        JLabel lblPasswordVerificar = new JLabel("Verificar contraseña:");
        panelFormulario.add(lblPasswordVerificar);
        
        txtPasswordVerificar = new JPasswordField();
        txtPasswordVerificar.setPreferredSize(new Dimension(200, 25));
        panelFormulario.add(txtPasswordVerificar);
        txtPasswordVerificar.setColumns(15);
        
        // Crear un nuevo panel solo para el lblMensaje
        JPanel panelMensaje = new JPanel(new FlowLayout(FlowLayout.CENTER)); // Centrar el mensaje
        lblMensaje = new JLabel(""); // Inicializar JLabel para mostrar mensajes
        panelMensaje.add(lblMensaje); // Añadir lblMensaje al nuevo panel
        panelCenter.add(panelMensaje); // Añadir el panel al centro

        JPanel panelSouth = new JPanel();
        getContentPane().add(panelSouth, BorderLayout.SOUTH);
        panelSouth.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        
        JButton btnLogin = new JButton("Iniciar sesión");
        btnLogin.addActionListener(e -> verificarLogin());
        panelSouth.add(btnLogin);
    }
    
    private void verificarLogin() {
        
        String usuario = txtNombreUsuario.getText();
        String password = new String(txtPassword.getPassword());
        String passwordVerificar = new String(txtPasswordVerificar.getPassword());

        // Validar la contraseña
        if (!validarPassword(password)) {
            lblMensaje.setText("Error: La contraseña debe tener al menos 8 caracteres, incluyendo una mayúscula, una minúscula y un número.");
            return;
        }

        // Comprobar si las contraseñas coinciden
        if (!password.equals(passwordVerificar)) {
            lblMensaje.setText("Error: Las contraseñas no coinciden.");
            return;
        }

        // Si todo es correcto
        lblMensaje.setText("Registro exitoso. ¡Bienvenido, " + usuario + "!");
        txtNombreUsuario.setText("");
        txtPassword.setText("");
        txtPasswordVerificar.setText("");
    }

    private boolean validarPassword(String password) {
        // Expresión regular para la validación de la contraseña
        String regex = "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d).{8,}$";
        return Pattern.matches(regex, password);
    }
}
