package componentesJavaSwingEjercicios;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class SelectorFotos extends JFrame {

	private static final long serialVersionUID = 1L;
	
	public static void main(String[] args) {
		
		SwingUtilities.invokeLater(new Runnable() {
			@Override
			public void run() {
				new SelectorFotos();
			}
		});
	}

	// Componentes de la interfaz
	private JLabel imagenLabel;
	private JRadioButton rbtnPerro, rbtnGato, rbtnTigre, rbtnLeon;
	private ButtonGroup grupoOpciones;

	// Constructor del JFrame
	public SelectorFotos() {
		// Configuración de la ventana
		setTitle("Selector Fotos");
		setSize(400, 500);
		setDefaultCloseOperation(JFrame.DO_NOTHING_ON_CLOSE); // Para manejar el cierre manualmente
		setLocationRelativeTo(null); // Centrar la ventana
		setLayout(new BorderLayout());

		// Panel de opciones (JRadioButtons)
		JPanel panelOpciones = new JPanel();
		panelOpciones.setLayout(new BoxLayout(panelOpciones                                                                            ));
		JLabel lblInstrucciones = new JLabel("Elija una opción para ver la imagen");

		rbtnPerro = new JRadioButton("Perro");
		rbtnGato = new JRadioButton("Gato");
		rbtnTigre = new JRadioButton("Tigre");
		rbtnLeon = new JRadioButton("Leon");

		// Agrupar los JRadioButtons
		grupoOpciones = new ButtonGroup();
		grupoOpciones.add(rbtnPerro);
		grupoOpciones.add(rbtnGato);
		grupoOpciones.add(rbtnTigre);
		grupoOpciones.add(rbtnLeon);

		// Añadir los botones al panel de opciones
		panelOpciones.add(lblInstrucciones);
		panelOpciones.add(rbtnPerro);
		panelOpciones.add(rbtnGato);
		panelOpciones.add(rbtnTigre);
		panelOpciones.add(rbtnLeon);

		// Panel para la imagen
		JPanel panelImagen = new JPanel();
		imagenLabel = new JLabel();
		panelImagen.add(imagenLabel);

		// Panel del botón de salir
		JPanel panelBotonSalir = new JPanel();
		JButton btnSalir = new JButton("SALIR");

		// Acción del botón salir
		btnSalir.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				int opcion = JOptionPane.showOptionDialog(null, "¿Desea salir?", "Cerrar Programa",
						JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE, null,
						new String[] { "Claro, que SI", "Claro, que NO" }, "Claro, que NO");

				if (opcion == JOptionPane.YES_OPTION) {
					System.exit(0); // Cerrar la aplicación si elige "Sí"
				}
			}
		});
		panelBotonSalir.add(btnSalir);

		// Añadir ActionListeners para los JRadioButtons
		rbtnPerro.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				mostrarImagen("perros.jpg");
			}
		});

		rbtnGato.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				mostrarImagen("gatos.jpg");
			}
		});

		rbtnTigre.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				mostrarImagen("tigre.jpg");
			}
		});

		rbtnLeon.addActionListener(new ActionListener() {
			@Override
			public void actionPerformed(ActionEvent e) {
				mostrarImagen("leon.jpg");
			}
		});

		// Añadir los paneles al JFrame
		add(panelOpciones, BorderLayout.NORTH);
		add(panelImagen, BorderLayout.CENTER);
		add(panelBotonSalir, BorderLayout.SOUTH);

		// Hacer visible el JFrame
		setVisible(true);
	}

	// Método para mostrar una imagen en el JLabel
	private void mostrarImagen(String nombreImagen) {
		ImageIcon icono = new ImageIcon(nombreImagen);
		Image imagen = icono.getImage().getScaledInstance(300, 300, Image.SCALE_SMOOTH); // Escalar imagen
		imagenLabel.setIcon(new ImageIcon(imagen));
	}

	
}
